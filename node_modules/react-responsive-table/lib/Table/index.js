'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactStyleProptype = require('react-style-proptype');

var _reactStyleProptype2 = _interopRequireDefault(_reactStyleProptype);

var _Row = require('../Row');

var _Row2 = _interopRequireDefault(_Row);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Table = function Table(props, context) {
  var material = props.material;
  var children = props.children;

  if (props.material) {
    children = Table.buildChildren(props.children, 0, material).children;
  }
  return _react2.default.createElement(
    'div',
    { style: Table.getStyles(props, context) },
    children
  );
};

Table.buildChildren = function (children, index, material) {
  var result = [];
  var resultIndex = index;
  if (children) {
    if (Array.isArray(children)) {
      children.forEach(function (child) {
        var row = Table.buildChildren(child, resultIndex, material);
        result.push(row.children);
        resultIndex = row.index;
      });
    } else if (children.type === _Row2.default) {
      result.push(_react2.default.cloneElement(children, { index: index, material: material }));
      resultIndex += 1;
    } else {
      result.push(children);
    }
  }
  return { children: result, index: resultIndex };
};

Table.styles = {
  table: {
    width: '100%'
  }
};

Table.contextTypes = {
  muiTheme: _propTypes2.default.object
};

/* eslint-disable react/no-unused-prop-types */
Table.propTypes = {
  material: _propTypes2.default.bool,
  style: _reactStyleProptype2.default,
  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node])
};

Table.defaultProps = {
  material: false,
  style: {},
  children: null
};

Table.getStyles = function (props, context) {
  var tableStyle = Object.assign({}, Table.styles.table);
  if (props.material && context.muiTheme) {
    var _context$muiTheme = context.muiTheme,
        baseTheme = _context$muiTheme.baseTheme,
        table = _context$muiTheme.table;


    tableStyle = Object.assign(tableStyle, {
      backgroundColor: table.backgroundColor,
      padding: '0 ' + baseTheme.spacing.desktopGutter + 'px',
      width: '100%',
      borderCollapse: 'collapse',
      borderSpacing: 0,
      tableLayout: 'fixed',
      fontFamily: baseTheme.fontFamily
    });
  }
  return Object.assign(tableStyle, props.style);
};

exports.default = Table;